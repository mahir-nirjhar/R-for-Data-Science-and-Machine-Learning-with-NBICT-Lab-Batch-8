5+5
# updating the file
data = c(9, 6, 17, 31, 11)
x=mean(data)
mean(data)
summary(data)
z= x/2
# updating my data
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z= x/2
z=
# updating my data
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z= x/2
z=
# updating the file
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages('Plyr')
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
ggsave("publication_ggplot.png", p, width = 6, height = 4, dpi = 300)
setwd("D:/R/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-Batch-8/RDSML-Day-29 Visualizing Binomial Probability Distribution")
dbinom (x = 4, size = 10, prob = 0.5)
pbinom (q = 4, size = 10, prob = 0.5)
n <- c(0:10)
n
dbinom(x = n, size = 10, prob = 0.5)
p = dbinom(x = n, size = 10, prob = 0.5)
barplot(p)
library(visualize)
visualize.binom(stat = 4, size = 10, prob = 0.5)
pbinom(q = 4, size = 10, prob = 0.5)
visualize.binom(stat = 4, size = 10, prob = 0.5, section = 'lower')
visualize.binom(stat = 4, size = 10, prob = 0.5, section = 'upper')
visualize.binom(stat = 4, size = 10, prob = 0.5, section = 'upper')
visualize.binom(stat = 4, size = 10, prob = 0.5, section = 'bounded')
visualize.binom(stat = c(4, 6), size = 10, prob = 0.5, section = 'bounded')
visualize.binom(stat = c(3, 7), size = 10, prob = 0.5, section = 'bounded')
visualize.binom(stat = c(3, 7), size = 10, prob = 0.5, section = 'unbounded')
visualize.binom(stat = c(3, 7), size = 10, prob = 0.5, section = 'tails')
visualize.binom(stat = 4, size = 10, prob = 0.5)
grid(nx = NULL, ny = NULL, col = "grey", Ity = "dotted")
grid(nx = NULL, ny = NULL, col = 'grey', Ity = 'dotted')
grid(nx = NULL, ny = NULL, col = 'grey', lty = 'dotted')
