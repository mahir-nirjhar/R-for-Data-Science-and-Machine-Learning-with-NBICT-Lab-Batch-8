5+5
# updating the file
data = c(9, 6, 17, 31, 11)
x=mean(data)
mean(data)
summary(data)
z= x/2
# updating my data
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z= x/2
z=
# updating my data
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z= x/2
z=
# updating the file
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages('Plyr')
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
ggsave("publication_ggplot.png", p, width = 6, height = 4, dpi = 300)
setwd("D:/R/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-Batch-8/RDSML-Day-25  rnorm, pnorm, qnorm, dnorm functions")
# rnorm
rnorm(10)
# rnorm
x <- rnorm(10)
# rnorm
x <- rnorm(100)
mean(x)
sd(x)
x <- rnorm(1000)
mean(x)
sd(x)
x <- rnorm(10000)
mean(x)
sd(x)
# rnorm
x <- rnorm(10000, mean = 0, sd =1)
y <- rnorm(10, mean = 100, sd =5)
mean(y)
sd(y)
y <- rnorm(100, mean = 100, sd =3)
mean(y)
sd(y)
y <- rnorm(100, mean = 100, sd =3)
mean(y)
sd(y)
# At z=0 the value of probability is 0.5
pnorm(0)
pnorm(-1.96)
pnorm(-1.64)
qnorm(0.05050258)
pnorm(1.96)
#dnorm
# Y axis value for z = 0
dnorm(0)
# Lets use dnorm to draw the normal distribution
zvalues <- seq(-4.0, 4.0, by = 0.1)
zvalues
# Lets use dnorm to draw the normal distribution
zvalues <- seq(-4.0, 4.0, by = 0.01)
zvalues
dvalues <- dnorm(zvalues)
dvalues
zvalues <- seq(-4.0, 4.0, by = 0.1)
dvalues <- dnorm(zvalues)
zvalues
dvalues
plot(x = zvalues, y = dvalues )
