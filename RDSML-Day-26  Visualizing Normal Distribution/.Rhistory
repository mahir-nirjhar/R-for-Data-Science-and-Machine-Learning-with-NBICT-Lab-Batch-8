5+5
# updating the file
data = c(9, 6, 17, 31, 11)
x=mean(data)
mean(data)
summary(data)
z= x/2
# updating my data
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z= x/2
z=
# updating my data
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z= x/2
z=
# updating the file
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages('Plyr')
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
ggsave("publication_ggplot.png", p, width = 6, height = 4, dpi = 300)
setwd("D:/R/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-Batch-8/RDSML-Day-26  Visualizing Normal Distribution")
install.packages("visible")
e
# Installing the visibiling package
# Installing.packages("visualize")
library(visualize)
install.packages("visualise")
# Installing.packages("visualise")
library(visualise)
# Installing.packages("visualize")
library(visualize)
# Visualize normal distribution
pnorm(-1.96)
visual.norms(1.96)
install.packages("visualize")
library(visualize)
pnorm(-1.96)
visual.norms(-1.96)
# Visualize normal distribution
pnorm(-1.96)
visual.norms(-1.96)
visual.norms(-1.96)
visualize.pnorms(-1.96)
visual.pnorms(-1.96)
visual.norm(stat = -1.96)
visualize.norm(stat = -1.96)
visualize.norm(stat = 1.96)
visualize.norm(stat = 1.96, section = "upper")
visualize.norm(stat = c(-1.96, 1.96), section = "Bounded")
visualize.norm(stat = c(-1.96, 1.96), section = "bounded")
visualize.norm(stat = c(-1.96, 1.96), section = "tails")
visualize.norm(stat = c(-1, 1), section = "bounded")
visualize.norm(stat = c(-3, 3), section = "bounded")
visualize.norm(stat = c(-3, 3), section = "bounded")
visualize.norm(stat = c(-3, 3), section = "tails")
pnorm(2)
1 - pnorm(2)
visualize.norm(stat = 77)
visualize.norm(stat = 77, mu = 75, sd =1, section = "upper")
pnorm(77, mean = 75, sd = 1)
visualize.norm(stat = 77, mu = 75, sd =1, section = "lower")
1 - pnorm(77, mean = 75, sd = 1)
