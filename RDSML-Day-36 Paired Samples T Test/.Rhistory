5+5
# updating the file
data = c(9, 6, 17, 31, 11)
x=mean(data)
mean(data)
summary(data)
z= x/2
# updating my data
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z= x/2
z=
# updating my data
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z= x/2
z=
# updating the file
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages('Plyr')
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
ggsave("publication_ggplot.png", p, width = 6, height = 4, dpi = 300)
setwd("D:/R/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-Batch-8/RDSML-Day-36 Paired Samples T Test")
# Paired samples T-Test in R
# Importing the dataset
myDataset <- read.csv("paired-samples-t-test.csv")
View(myDataset)
# Calculating the difference
differences <- myDataset$carb - myDataset$carb_protein
differences
# Checking if the differences are normally distributed
shapiro.test(differences)
# Checking for ouliers using boxplot
boxplot(differences)
# Running the paired T-Test
t.test(x = myDatset$carb, y = myDataset$carb_protein, paired = T)
# Running the paired T-Test
t.test(x = myDataset$carb, y = myDataset$carb_protein, paired = T)
# Running the wilcoxon signed-rank test
wilcox.test(x = myDataset$carb, y = myDataset$carb_protein, paired = T)
mean(myDataset$carb)
sd(myDataset$carb)
mean(myDataset$carb_protein)
sd(myDataset$carb_protein)
# Effect size calculation using cohen's d
# 0.2 ~ small, 0.5 ~ medium, 0.8 ~ large
install.packages("effsize")
library(effsize)
cohen.d(myDataset$carb_protein, myDataset$carb, paired = T)
