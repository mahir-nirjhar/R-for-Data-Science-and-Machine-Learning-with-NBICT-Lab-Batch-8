5+5
# updating the file
data = c(9, 6, 17, 31, 11)
x=mean(data)
mean(data)
summary(data)
z= x/2
# updating my data
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z= x/2
z=
# updating my data
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z= x/2
z=
# updating the file
data = c(9, 6, 17, 31, 11)
x =  mean(data)
mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages('Plyr')
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
# The Plyr package is used to calculate the mean weight of each group.
install.packages("Plyr")
ggsave("publication_ggplot.png", p, width = 6, height = 4, dpi = 300)
setwd("D:/R/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-Batch-8/RDSML-Day-45  Chi-Square Test of Independence in R (Part-2)")
install.packages("gplots")
housetasks <- read.delim("housetasks.txt", row.names = 1)
housetasks
print(housetasks)
housetasks <- read.delim("housetasks.txt", row.names = 1)
# Importing the dataset
housetasks <- read.delim("housetasks.txt", row.names = 1)
library("gplots")
View(housetasks)
dt <- as.table(as.matrix(housetasks))
balloonplot(t(dt), main = "Housetasks Visualization",
label = F, show.margins = F,
xlab = "", ylab = "")
library("graphics")
mosaicplot(dt, shade = T, las = 2,
main = "Housetasks")
chisq <- chisq.test(housetasks)
chisq
# Observed counts
chisq$observed
# Expected counts
round(chisq$expected,2)
# Residual calculation
chisq$observed - round(chisq$expected,2)
# Standardized (pearson) residuals calculation
round(chisq$residuals, 3)
# Adjusted standardized residuals
chisq$stdres
# Visualize Pearson residuals using the package corrplot
install.packages("corrplot")
library(corrplot)
corrplot(chisq$residuals, is.cor = FALSE)
contrib <- 100 * (chisq$residuals)^2 / chisq$statistic
round(contrib, 3)
# Visualize the contribution
corrplot(contrib, is.cor = FALSE)
